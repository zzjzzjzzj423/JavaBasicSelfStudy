1. Static： 是java中的一个修饰符， 既可以修饰成员变量又可以修饰成员方法

  1.1 静态变量： 该类的所有的对象共享这个变量, 静态变量在JDK8以后位于堆内存的静态区， 而静态变量可以由Class调用所有他是优于对象的出现的

  1.2 静态方法： 该类的所有的对象共享这个方法， 多用于测试类和工具类

      1.2.1 工具类将构造私有化并且方法全部设置为静态方法

      1.2.2 静态方法的注意事项：

      1.2.2.1 静态方法只能访问静态方法和静态变量， 为什么？

      因为静态方法是共享的是伴随类产生的， 而倘若可以访问成员变量便会导致混乱，而且也会泄露没有意义

      1.2.2.2 静态方法没有this关键字

2. 继承关系：

    2.1 提高代码复用性

    2.2 可以让子类在父类基础上添加功能

    如何设计？

    满足1.在类与类之间存在相同内容而且2.子类是父类的一种

    2.3 Java只能单继承， 不能多继承但是支持多层继承即A继承B， B继承C， 其中C是A的间接父类， 其中每一个类都间接或直接继承于Object

    2.4 子类只能调用public成员变量和放法

    2.5 子类可以继承什么？

    构造方法                          非私有 不能                                        private 不能

    成员变量                           非私有 能                                         private 能

    成员方法                           非私有 能                                         private 不能

    2.6 为什么构造方法不能被继承

      因为倘若可以被继承， 违背构造方法， 方法名与类名不同

    2.7 继承内存分布

      子内载入方法区后， 检测到有父类从而父类也开辟方法区。 最在在堆区会有两块空间， 一部分放父类一部分子类

      2.7.1 成员方法的继承

        a. 虚方法表：如果父类的方法是非final， 非static， 非private的那么父类会把它们放到虚方法表中再往下继承会一直传递给各个子类从而加快效率调用

        b. 层级检测： 如果当前父类没有这个方法会一直往下进行查看， 知道找到这个方法

      
